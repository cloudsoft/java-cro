name: 'AWS :: Hoodie Shop :: App'
location: 'terraform-local:0.1.0-SNAPSHOT'
iconUrl: https://github.com/cloudsoft/demos/raw/master/icons/hoodie-shop.png

brooklyn.config:
  exposing.service.type: "LoadBalancer"
  container.image.version: "1.1" # image built for linux/amd64

services:
  - type: namespace-tf
    id: namespace
    name: 'Hoodie Shop :: Namespace'

  - type: eks-database-tf
    id: db
    name: 'Hoodie Shop :: Database'
    brooklyn.config:
      tf_var.hoodie_db_namespace: $brooklyn:entity("namespace").attributeWhenReady("tf.output.namespace_name")
      tf_var.service_type: $brooklyn:parent().config("exposing.service.type")
      tf_var.image_version: $brooklyn:parent().config("container.image.version")

  - type: eks-backend-tf
    id: backend
    name: 'Hoodie Shop :: Backend'
    brooklyn.config:
      # brooklyn configuration for Terraform
      tf_var.hoodie_backend_namespace: $brooklyn:entity("namespace").attributeWhenReady("tf.output.namespace_name")
      tf_var.service_type: $brooklyn:parent().config("exposing.service.type")
      tf_var.image_version: $brooklyn:parent().config("container.image.version")
      tf_var.hoodie_db_host: $brooklyn:entity("db").attributeWhenReady("tf.output.hoodie_db_host_internal")
      tf_var.hoodie_db_port: $brooklyn:entity("db").attributeWhenReady("tf.output.hoodie_db_port_internal")

  - type: eks-frontend-tf
    id: frontend
    name: 'Hoodie Shop :: Frontend'
    brooklyn.config:
      tf_var.hoodie_frontend_namespace: $brooklyn:entity("namespace").attributeWhenReady("tf.output.namespace_name")
      tf_var.service_type: $brooklyn:parent().config("exposing.service.type")
      tf_var.image_version: $brooklyn:parent().config("container.image.version")
      tf_var.hoodie_backend_host: $brooklyn:entity("backend").attributeWhenReady("backend.host")
      tf_var.hoodie_backend_port: $brooklyn:entity("backend").attributeWhenReady("tf.output.hoodie_backend_port_internal")

  - type: org.apache.brooklyn.entity.group.DynamicGroup
    name: K8s Deployments
    brooklyn.config:
      dynamicgroup.entityfilter:
        $brooklyn:object:
          type: terraform-predicate-resource-type
          constructor.args:
            - "kubernetes_deployment_v1"